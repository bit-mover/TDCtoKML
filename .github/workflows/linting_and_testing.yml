name: Linting and testing

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-in-project: true
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
      - name: Verify black has been run
        run: poetry run black --check $(git ls-files '*.py')
      - name: Verify isort has been run
        run: poetry run isort --check $(git ls-files '*.py')
      - name: Analysing the code with flake8
        run: poetry run flake8 $(git ls-files '*.py')
      - name: Analysing the code with pytest
        run: poetry run pytest .
      - name: Analysing the code with pydocstyle
        run: poetry run pydocstyle $(git ls-files '*.py')
      - name: Analysing the code with mypy
        run: poetry run mypy --strict $(git ls-files '*.py')
      - name: Analysing the code with pylint
        run: poetry run pylint $(git ls-files '*.py')
